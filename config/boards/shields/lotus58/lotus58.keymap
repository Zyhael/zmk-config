/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define FUNC 1
#define GAME 2
#define NUMBER 3

&kscan0 {
    debounce-period = <20>;
};

&sk {
	release-after-ms = <200>;
};

&mt {
	tapping-term-ms = <250>;
};

/ {
	behaviors {
		tilesc: mod_morph_tilde_escape {
			compatible = "zmk,behavior-mod-morph";
			label = "TILDE_ESCAPE";
			#binding-cells = <0>;
			bindings = <&kp ESC>, <&kp TILDE>;
			mods = <(MOD_LSFT)>;
		};

		slt: behavior_sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "sticky_tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&sl>, <&kp>;
        };

		tlsk: behavior_toggle_layer_sticky_key {
            compatible = "zmk,behavior-hold-tap";
            label = "toggle_tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&tog>, <&kp>;
        };
		
	};

	combos {
		compatible = "zmk,combos";

        combo_f11 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp F11>;
        };

		combo_f12 {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp F12>;
        };
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |  3  |   4      |  5  | SS      |          |  6   |   7    |  8    |  9   |   0   | HOME |
// | TAB   |  Q  |  W  |  E  |   R      |  T  |                    |  Y   |   U    |  I    |  O   |   P   | END  |
// | BSPC  |  A  |  S  |  D  |   F      |  G  |                    |  H   |   J    |  K    |  L   |   ;   | INS  |
// | SHIFT |  Z  |  X  |  C  |   V      |  B  |  "(["   |  |  ")]" |  N   |   M    |  ,    |  .   |   /   | END  |
//                     | CTRL| FUNC GUI | ALT | SPC ENT |  | FUNC  | RAISE| ALTGR  |  FN   |
			bindings = <
&tilesc			&kp N1 	&kp N2 	&kp N3   	&kp N4   	&kp N5      &kp LG(LS(S))      				&kp N6		&kp N7		&kp N8		&kp N9  	&kp N0   	&kp HOME
&lt FUNC TAB	&kp Q  	&kp W  	&kp E    	&kp R		&kp T                     					&kp Y		&kp U		&kp I   	&kp O   	&kp P    	&kp END
&kp BSPC		&kp A  	&kp S 	&kp D    	&kp F    	&kp G                      					&kp H		&kp J		&kp K   	&kp L   	&kp SEMI 	&kp INS
&kp LSHFT 		&kp Z  	&kp X  	&kp C    	&kp V		&kp B		&mt LBKT LPAR	&mt RBKT RPAR	&kp N		&kp M		&kp COMMA 	&kp DOT 	&kp FSLH 	&kp RSHFT
                    			&kp LALT 	&kp LGUI 	&kp LCTRL  	&mt RET SPACE  	&mo FUNC 		&tog NUMBER &kp BSPC 	&kp RGUI
			>;

			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};

		func_layer {
// ------------------------------------------------------------------------------------------------------------
// |  F1  |  F1  |  F2  |   F3    |   F4     |  F5   | GUI + PAUSE |          |  F6   |  F7      |  F8  |  F9   |  F10  |       |
// |      |      |  UP  |         |          |       |                        |  |    |  \       |      |       |       |       |
// | DEL  | LEFT | DOWN |  RIGHT  |          |       |                        |       |          |      |       |       |       |
// |  `   |  !   |  @   |  #      |  $       |  %    |     { >     |  |  } >  |  ^    |  &       |  *   |   _   |       |       |
//                      | DEFAULT | BOOTLOAD | RESET |             |  |       | RESET | BOOTLOAD |      |
			bindings = <
&kp GRAVE	&kp F1		&kp F2		&kp F3			&kp F4		&kp F5		&trans						&kp F6		&kp F7		&kp F8			&kp F9		&kp F10		&none
&none		&none		&kp UP		&none			&none		&none									&kp PIPE	&kp BSLH	&none			&none		&none		&none
&kp DEL		&kp LEFT	&kp DOWN	&kp RIGHT		&none		&none									&none		&none		&none			&none		&none		&none
&kp GRAVE	&kp EXCL	&kp AT		&kp HASH		&kp DOLLAR	&kp PRCNT	&mt LT LBRC		&mt GT RBRC	&kp CARET	&kp AMPS	&kp KP_MULTIPLY	&kp UNDER	&none		&none
                                	&tog DEFAULT	&bootloader	&reset    	&none			&none		&reset		&bootloader	&none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		game_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   ^   |  v   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans  &trans                     &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		number_layer {
// ------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |  3  |   4      |  5  | PRINT |          |  6   |   7    |  8    |  9   |   0   | NUMLOCK |
// | TAB   |  Q  |  W  |  E  |   R      |  T  |                  |  Y   |   U    |  I    |  O   |   P   | INSERT  |
// | BSPC  |  A  |  S  |  D  |   F      |  G  |                  |  H   |   J    |  K    |  L   |   ;   | HOME    |
// | SHIFT |  Z  |  X  |  C  |   V      |  B  |  "([" |  |  ")]" |  N   |   M    |  ,    |  .   |   /   | END     |
//                     | CTRL| FUNC GUI | ALT | SPACE |  | ENTER | RAISE| ALTGR  |  FN   |
			bindings = <
&tilesc			&kp N1 	&kp N2 	&kp N3   	&kp N4   	&kp N5      &kp LG(LS(S))      				&kp N6		&kp N7		&kp N8		&kp N9  	&kp N0   	&kp HOME
&lt FUNC TAB	&kp Q  	&kp W  	&kp E    	&kp R		&kp T                     					&kp Y		&kp U		&kp I   	&kp O   	&kp P    	&kp END
&kp BSPC		&kp A  	&kp S 	&kp D    	&kp F    	&kp G                      					&kp H		&kp J		&kp K   	&kp L   	&kp SEMI 	&kp INS
&sk LSHFT 		&kp Z  	&kp X  	&kp C    	&kp V		&kp B		&mt LBKT LPAR	&mt RBKT RPAR	&kp N		&kp M		&kp COMMA 	&kp DOT 	&kp FSLH 	&kp RSHFT
                    			&sk LALT 	&sk LGUI 	&sk LCTRL  	&mt RET SPACE  	&kp RET 		&tog NUMBER &kp BSPC 	&kp RGUI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};


		bluetooth_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4 &trans                &trans    &trans    &trans          &trans    &trans    &trans
&kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
                                              &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
